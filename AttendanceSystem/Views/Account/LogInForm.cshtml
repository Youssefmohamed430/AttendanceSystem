@model LogInViewModel

@{
    ViewData["Title"] = "LogIn";
}

<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <h1 class="text-center mb-4">LogIn</h1>

            <div class="card bg-dark text-white p-4 mb-4">
                <form asp-action="LogInCheck" method="post">
                    <div asp-validation-summary="All" class="text-danger"></div>
                    <div class="form-group mb-3">
                        <label asp-for="UserName" class="control-label"></label>
                        <input asp-for="UserName" class="form-control" />
                        <span asp-validation-for="UserName" class="text-danger"></span>
                    </div>

                    <div class="form-group mb-3">
                        <label asp-for="Password" class="control-label"></label>
                        <input asp-for="Password" class="form-control" type="password" />
                        <span asp-validation-for="Password" class="text-danger"></span>
                    </div>

                    <div class="form-group form-check mb-4">
                        <label class="form-check-label">
                            <input class="form-check-input" asp-for="RememberMe" /> @Html.DisplayNameFor(model => model.RememberMe)
                        </label>
                    </div>

                    <div class="form-group d-grid">
                        <button type="submit" class="btn btn-primary btn-lg">Log In</button>
                    </div>

                    <div class="mt-3 text-center">
                        <p>Not a member? <a asp-action="SignInForm" asp-controller="Account" class="text-primary">SignIn</a></p>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}   